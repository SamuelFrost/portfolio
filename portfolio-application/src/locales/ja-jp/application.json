{
  "common": {
    "some_page": "存在しないページ",
    "in_progress": "開発進行中",
    "short_language": "ja",
    "short_locale": "ja-jp"
  },
  "settings": {
    "display_preferences": "表示設定"
  },
  "views": {
    "standard": {
      "error_404": {
        "main": "このページは存在しません."
      }
    },
    "welcome": {
      "index": {
        "short_link": "ホーム",
        "welcome": "私のポートフォリオにようこそ！",
        "in_progress_statement": "ポートフォリオの作成が進行中であるため、功績などの内容はまだ全部載せていない状態ですが、全体的の作りは最新の技術を生かして作っていますので技術者にとって面白いかもしれません。気が向いたらリポジトリのほうを見るといいです。"
      }
    },
    "schedule": {
      "index": {
        "short_link": "スケージュール",
        "short_title": "スケージュール",
        "long_title": "ミーティングの時間などの提案のためのサミュエルの日程／アベイラビリティ"
      }
    },
    "resume": {
      "index": {
        "short_link": "職務経歴書",
        "resource_url": "https://storage.googleapis.com/portfolio-media/Samuel%20Frost_%E5%B1%A5%E6%AD%B4%E6%9B%B8%E3%83%BB%E8%81%B7%E5%8B%99%E7%B5%8C%E6%AD%B4%E6%9B%B8.pdf"
      }
    },
    "projects": {
      "models": {
        "3d_models_index": {
          "short_link": "3d モデル",
          "object_description_microRoom": "カプセルホテルからインスピレーションを取って、一階建てようのビルのスペースを区切るための家具として考えたモデルです。",
          "object_description_balcony": "Amazonで見ていた家具(赤)が入れるかどうかを考慮するためでしたので10分もかからないで作った簡単なモデルです。",
          "object_description_house": "アメリカで作っていた家の計画案のためのモデルです。実際使っていたモデルは木などのレイヤーがありますが、全部あると乱雑なのでいくつが非表示の状態です。",
          "object_name_microRoom": "マイクロ部屋",
          "object_name_house": "家屋敷",
          "object_name_balcony": "アパートのベランダ"
        }
      },
      "portfolio": {
        "index": {
          "title": "このポートフォリオについて",
          "short_link": "ポートフォリオ",
          "why_worth_mentioning": "フレームワーク無しのフレームワーク",
          "no_framework_native_apis": "このサイトはモダンのフロントエンド・フレームワークと同じ機能を実施していますが、どれかのフレームワークに依存していません。ブラウザーがエレメントを作る時に使うAPIを使用することで可能となっています。",
          "no_framework_benefits": "このやり方には開発者とエンドユーザーに大きなメリットとなっています。<br>開発者としてはフレームワーク依存がないおかげでどこからでも機能のソリューションを持ち込むことができます。そして新しいユースケースに適していないと判断したらその機能を切り離すことは比較的に簡単です。それに他のフレームワークが開発者をブラウザーのAPIから遠ざけるが、このやり方だと根に近いところで作業しているおかげで根本的なところも弄ることができて、カスタマイゼーションが簡単になります。<br>ユーザーに取ってのメリットは使用されているライブラリーが小さくて全体的に実行されるプロセスが少ないし、実行されるタイミングももっとコントロールできるからパフォーマンスが良くなります。",
          "scalability": "スケーラビリティ",
          "scalability_explanation": "アプリが大きくなることにつき、対処しなければならないデータも増えます。これに対してデータやプロセス処理を少なくするための対策が必要となります。 ",
          "pre-rendering": "古くから使われているやり方はサーバー側でHTMLを構成し、ユーザーに完成したページを送る方法です。実はこのやり方はユーザー側に届いてからの処理が早いですが、どんなに簡単なページでも移動ごとに必ずサーバーに問わないといけないです。こうすると結果的にサーバーのリソースを証文してパフォーマンスも金もかかることにつながります。",
          "spa_scalability": "かえって、このポートフォリオのようなSingle page application(SPA)はユーザー側でアプリ内の動作のロジックをあらかじめ用意する。そうすると一度送った内容は二度送る必要がないし、新たなデータが必要な場合のみにサーバーにリクエストする。",
          "web_vitals_and_metrics": "Web Vitalsの測定",
          "web_vitals_explanation": "Web Vitalsとは、ユーザーの経験を中心としてよりいい開発をするべきと思う気持ちからグーグルのエンジニアが考え出したコンクリートな基準です。",
          "web_vitals_tools": "Web Vitalsとともにその基準にどれほど沿っているかを図るためのツールも出しています。ブラウザー（chrome）のdevtoolsからLightHouseのツールとして使えるようになっているし、自分のシステムが鑑定に影響しないためのサイトもあります。",
          "web_vitals_measure_try_it_yourself": "こちらでご自身で試しください：",
          "my_web_vitals": "このサイトを作ってから定期的にチェックしていて、判定はこのようになっています：",
          "my_web_vitals_personal_usefulness": "見ての通り、満点のスコアーを保っています。定期的にチェックすることで問題になりそうな機能をいち早く直すことにしています。",
          "project_management": "Asanaでのプロジェクト・マネージメント",
          "project_management_asana": "一般的に用意されているポートフォリオより多くの機能を含めるつもりなので、AsanaでAgile的なやり方フェイチャーの管理をしています。一つの機能に深入りしてから次に何をするか決めるや開発を保留にしたなどの時に役に立っています。",
          "the_future_of_this_project_and_the_web": "このプロジェクトとウェブ全体的の未来について",
          "pwa": "このプロジェクトはPWAです。正確には一応ほとんどの条件は整っているが、オフラインでも動くためのウェブ・ワーカーの戦略をもうちょっと考えてから実装するつもりです。ウェブ・ワーカーはオフラインだけではなく、バックグラウンドでデータを更新したりプッシュ通知を送ったり、いろいろ今までネイティブアプリでしか作れなかった機能をウェブで使えるようになっています。さらに、簡単なWeb Manifestファイルを作ったらPWAをAndroidやWindowsで普通のアプリと同じようにダウンロードしてアイコンで開いたりすることもできます。結果的に開発はすべてhtmlやJavaScript/TypeScript若しくはweb assemblyにコンパイルしたコードで一度書いたらすべてのＯＳやプラットフォームで同じ動きをしてくれる。",
          "web_development_future": "PWAやTrusted Web Activity(ダウンロードされたウェブアプリ)によってユーザー側のアプリは今後ブラウザーのエンジンを使用して、開発はこの方向に進むと思います。こうなるとほとんどの開発者にとって未知のテリトリーです。そのため、私の方針として根本的なところを理解したいし、個人のプロジェクトではフレームワークなしにブラウザーのエンジンのAPIに近いところを触れることを選んでいます。"
        }
      }
    }
  }
}